/*
 * GhostBot, a Discord bot made for all your Danny Phantom needs
 *     Copyright (C) 2018  Duncan "duncte123" Sterken
 *
 *     This program is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     This program is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '2.0.2'
}

mainClassName = 'me.duncte123.ghostBot.GhostBot'

group 'me.duncte123.ghostbot'
version "0.0.${getVersionBuild()}"

sourceCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    //JDA
    compile group: 'net.dv8tion', name: 'JDA', version: '3.5.0_330'
    //LavaPlayer
    compile group: 'com.sedmelluq', name: 'lavaplayer', version: '1.2.45'
    //JSON Extension
    compile group: 'com.afollestad', name: 'ason', version: '1.4.16'
    // Logback core
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
    // Logback classic
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    //JSON Extension
    compile group: 'com.afollestad', name: 'ason', version: '1.4.16'
    //Commons text, because UnicodeUnescaper
    compile group: 'org.apache.commons', name: 'commons-text', version: '1.1'
}

compileJava.options.encoding = 'UTF-8'

def getVersionBuild() {
    def versionPropsFile = file('version.properties')
    def versionBuild

    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        versionBuild = Integer.valueOf(versionProps['VERSION_BUILD'].toString()) + 1
        versionProps['VERSION_BUILD'] = versionBuild.toString()
        PrintWriter writer = new PrintWriter("version.properties", "UTF-8")
        writer.println("VERSION_BUILD=$versionBuild")
        writer.close()
    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }

    return versionBuild
}
