/*
 * GhostBot, a Discord bot made for all your Danny Phantom needs
 *     Copyright (C) 2018  Duncan "duncte123" Sterken
 *
 *     This program is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     This program is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

plugins {
    id 'java'
    id 'application'
    id 'idea'
    id 'com.github.johnrengelman.shadow' version '2.0.2'
    id 'de.fuerstenau.buildconfig' version '1.1.8'
}

mainClassName = 'me.duncte123.ghostBot.GhostBot'
group 'me.duncte123.ghostBot'
version "0.1.0_${getGitHash()}"

sourceCompatibility = 1.9

repositories {
    jcenter()

    maven {
        name 'jitpack'
        url 'https://jitpack.io'
    }
}

dependencies {
    //My little utils
    compile 'com.github.duncte123:botCommons:a857bf6ffc'
    //JDA
    compile group: 'net.dv8tion', name: 'JDA', version: '3.6.0_367'
    //LavaPlayer/Lavalink
    compile(group: 'com.github.Frederikam', name: 'Lavalink', version: '8738c3c') {
        exclude group: 'com.github.Frederikam.Lavalink', module: 'Lavalink-Server'
        exclude group: 'net.dv8tion', module: 'JDA'
    }
    // Logback core
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
    // Logback classic
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    runtime group: 'org.codehaus.groovy', name: 'groovy-jsr223', version: '3.0.0-alpha-2'
}

compileJava.options.encoding = 'UTF-8'

def getGitHash() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

buildConfig {
    appName = project.name
    version = project.version
    packageName = project.group
    charset = 'UTF-8'

    clsName = 'BuildConfig'
}
build {
    dependsOn clean
    dependsOn jar

    jar.mustRunAfter clean
}